buildscript {
	ext {
		springBootVersion = '2.0.2.RELEASE'
		aptVersion = '0.15'
	}
	repositories {
		mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath("net.ltgt.gradle:gradle-apt-plugin:${aptVersion}")
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'net.ltgt.apt'

group = 'com.app'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
	mavenCentral()
}


dependencies {
    //database related
    compile('org.springframework.boot:spring-boot-starter-data-jpa')
    compile('mysql:mysql-connector-java:5.1.6')

    //mapstruct
    compile('org.mapstruct:mapstruct-jdk8:1.2.0.Final')
    compile('org.mapstruct:mapstruct-processor:1.2.0.Final')
    apt 'org.mapstruct:mapstruct-processor:1.2.0.Final'

    //web related
    compile('org.springframework.boot:spring-boot-starter-thymeleaf')
    compile('org.springframework.boot:spring-boot-starter-web')
    compile('org.webjars:bootstrap:4.0.0-alpha')
    compile('org.webjars:jquery:3.1.1')

    //testing
    testCompile('org.springframework.boot:spring-boot-starter-test')
}

tasks.withType(JavaCompile) {
	options.compilerArgs = [
			'-Amapstruct.defaultComponentModel=spring',
			'-Amapstruct.unmappedTargetPolicy=ERROR'
	]

	options.encoding = 'UTF-8'
}

tasks.withType(Javadoc) {
	options.encoding = 'UTF-8'
}